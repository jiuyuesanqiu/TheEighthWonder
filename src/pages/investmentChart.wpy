<style>
ec-canvas {
  width: 100%;
  height: 100%;
}
.container {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
} 
</style>

<template>
  <view class="container">
    <ec-canvas id="mychart-dom-line" canvas-id="mychart-line" ec="{{ ec }}"></ec-canvas>
  </view>
</template>
<script>
import wepy from 'wepy';
import * as echarts from '../components/ec-canvas/echarts';
let chart = {};
export default class More extends wepy.page {
  config = {
    navigationBarTitleText: '投资明细',
    usingComponents: {
      'ec-canvas': '../components/ec-canvas/ec-canvas'
    },
    pageOrientation: 'auto'
  };
  data = {
    ec: {
      onInit: this.initChart
    },
    chart: {}
  };
  onShareAppMessage(res) {
    if (res.from === 'button') {
      console.log(res.target);
    }

    return {
      title: '极简复利计算器',
      path: '/pages/compound'
    };
  }

  initChart(canvas, width, height) {
    chart = echarts.init(canvas, null, {
      width: width,
      height: height
    });
    canvas.setChart(chart);


    let seriesData = [];
    let xAxisData = [];
    for(let i = 1;i<35+1;i++){
      seriesData.push(Math.floor(1300000 * (1.1 ** i)));
      xAxisData.push(i)
    }

    var option = {
      tooltip : {
        trigger: 'axis',
        axisPointer: {
            type: 'cross',
            label: {
                backgroundColor: '#6a7985'
            }
        },
        position: [10, 10]
    },
      xAxis: {
        type: 'category',
        data: xAxisData
      },
      yAxis: {
        type: 'value',
        splitLine:{
          show:false
        },
        axisLabel:{
          formatter(value,index){
            if(value>100000000){
              return Math.floor(value/100000000)+'B'
            }
            if(value>1000000){
              return Math.floor(value/1000000)+'M'
            }
            if(value>10000){
              return Math.floor(value/10000)+'W'
            }
            if(value>1000){
              return Math.floor(value/1000)+'K'
            }
          }
        }
      },
      grid:{
        // left:'15%'
      },
      series: [
        {
          data: seriesData,
          type: 'line',
          smooth: true
        }
      ],
    };

    chart.setOption(option);
    return chart;
  }
  onResize(res) {
    chart.resize(res.size.windowHeight, res.size.windowWidth);
  }
}
</script>