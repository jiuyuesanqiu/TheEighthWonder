<style>
  ec-canvas {
    width: 100%;
    height: 100%;
  }

  .container {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<template>
  <view>
    <view>

    </view>
    <view class="container">
      <ec-canvas id="mychart-dom-line" canvas-id="mychart-line" ec="{{ ec }}"></ec-canvas>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import * as echarts from '../components/ec-canvas/echarts';

  let chart = {};
  export default class More extends wepy.page {
    config = {
      navigationBarTitleText: '投资明细',
      usingComponents: {
        'ec-canvas': '../components/ec-canvas/ec-canvas'
      }
    };
    data = {
      ec: {
        onInit: this.initChart
      },
      chart: {}
    };

    onShareAppMessage(res) {
      if (res.from === 'button') {
        console.log(res.target);
      }

      return {
        title: '极简复利计算器',
        path: '/pages/compound'
      };
    }

    initChart(canvas, width, height) {
      chart = echarts.init(canvas, null, {
        width: width,
        height: height
      });
      canvas.setChart(chart);


      let seriesData = wx.getStorageSync('seriesData');
      let xAxisData = wx.getStorageSync('xAxisData');

      var option = {
        legend: {
          y: 'top',
          data: ['北京', '上海', '广州'],
          textStyle: {
            color: '#fff',
            fontSize: 16
          }
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: 'line',
            label: {
              backgroundColor: '#6a7985'
            }
          },
          position: [60, 60]
        },
        xAxis: {
          name:'年',
          type: 'category',
          data: xAxisData
        },
        yAxis: {
          name:'本息和',
          type: 'value',
          splitLine: {
            show: false
          },
          axisLabel: {
            formatter(value, index) {
              console.log(value, index);
              if (value > 100000000) {
                return value / 100000000 + 'B';
              }
              if (value > 1000000) {
                return value / 1000000 + 'M';
              }
              if (value > 10000) {
                return value / 10000 + 'W';
              }
              if (value > 1000) {
                return value / 1000 + 'K';
              }
            }
          }
        },
        grid: {
          left:'13%'
        },
        series: [
          {
            data: seriesData,
            type: 'line',
            smooth: true
          }
        ]
      };

      chart.setOption(option);
      return chart;
    }
  }
</script>
